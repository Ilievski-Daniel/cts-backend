name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Google Cloud SDK
        run: |
          export CLOUD_SDK_REPO="cloud-sdk"
          echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk -y

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install kubectl -y

      - name: Install GKE GCloud Auth Plugin
        run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin -y

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.run_number }}

      - name: Configure Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ vars.GCP_PROJECT_ID }}
          default_region: ${{ secrets.GCP_REGION }}
          default_zone: ${{ vars.GCP_ZONE }}

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ vars.GKE_CLUSTER_NAME }} --zone ${{ vars.GCP_ZONE }} --project ${{ vars.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          kubectl create deployment cts-backend --image=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.run_number }}
          kubectl expose deployment cts-backend --type=LoadBalancer --port=8080 --target-port=8080